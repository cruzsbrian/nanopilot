// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rest_post.proto

#ifndef PROTOBUF_rest_5fpost_2eproto__INCLUDED
#define PROTOBUF_rest_5fpost_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#pragma GCC system_header
#include <boost/shared_ptr.hpp>
#include <gazebo/util/system.hh>
#include "gazebo/msgs/MsgFactory.hh"
// @@protoc_insertion_point(includes)

namespace gazebo {
namespace msgs {

// Internal implementation detail -- do not call these.
void GZ_MSGS_VISIBLE protobuf_AddDesc_rest_5fpost_2eproto();
void protobuf_AssignDesc_rest_5fpost_2eproto();
void protobuf_ShutdownFile_rest_5fpost_2eproto();

class RestPost;

// ===================================================================

class GZ_MSGS_VISIBLE RestPost : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gazebo.msgs.RestPost) */ {
 public:
  RestPost();
  virtual ~RestPost();

  RestPost(const RestPost& from);

  inline RestPost& operator=(const RestPost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestPost& default_instance();

  void Swap(RestPost* other);

  // implements Message ----------------------------------------------

  inline RestPost* New() const { return New(NULL); }

  RestPost* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RestPost& from);
  void MergeFrom(const RestPost& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RestPost* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required string route = 2;
  bool has_route() const;
  void clear_route();
  static const int kRouteFieldNumber = 2;
  const ::std::string& route() const;
  void set_route(const ::std::string& value);
  void set_route(const char* value);
  void set_route(const char* value, size_t size);
  ::std::string* mutable_route();
  ::std::string* release_route();
  void set_allocated_route(::std::string* route);

  // required string json = 3;
  bool has_json() const;
  void clear_json();
  static const int kJsonFieldNumber = 3;
  const ::std::string& json() const;
  void set_json(const ::std::string& value);
  void set_json(const char* value);
  void set_json(const char* value, size_t size);
  ::std::string* mutable_json();
  ::std::string* release_json();
  void set_allocated_json(::std::string* json);

  // @@protoc_insertion_point(class_scope:gazebo.msgs.RestPost)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_route();
  inline void clear_has_route();
  inline void set_has_json();
  inline void clear_has_json();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr route_;
  ::google::protobuf::internal::ArenaStringPtr json_;
  ::google::protobuf::uint32 id_;
  friend void GZ_MSGS_VISIBLE protobuf_AddDesc_rest_5fpost_2eproto();
  friend void protobuf_AssignDesc_rest_5fpost_2eproto();
  friend void protobuf_ShutdownFile_rest_5fpost_2eproto();

  void InitAsDefaultInstance();
  static RestPost* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RestPost

// optional uint32 id = 1;
inline bool RestPost::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RestPost::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RestPost::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RestPost::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RestPost::id() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.RestPost.id)
  return id_;
}
inline void RestPost::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:gazebo.msgs.RestPost.id)
}

// required string route = 2;
inline bool RestPost::has_route() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RestPost::set_has_route() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RestPost::clear_has_route() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RestPost::clear_route() {
  route_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_route();
}
inline const ::std::string& RestPost::route() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.RestPost.route)
  return route_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestPost::set_route(const ::std::string& value) {
  set_has_route();
  route_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gazebo.msgs.RestPost.route)
}
inline void RestPost::set_route(const char* value) {
  set_has_route();
  route_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gazebo.msgs.RestPost.route)
}
inline void RestPost::set_route(const char* value, size_t size) {
  set_has_route();
  route_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gazebo.msgs.RestPost.route)
}
inline ::std::string* RestPost::mutable_route() {
  set_has_route();
  // @@protoc_insertion_point(field_mutable:gazebo.msgs.RestPost.route)
  return route_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestPost::release_route() {
  // @@protoc_insertion_point(field_release:gazebo.msgs.RestPost.route)
  clear_has_route();
  return route_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestPost::set_allocated_route(::std::string* route) {
  if (route != NULL) {
    set_has_route();
  } else {
    clear_has_route();
  }
  route_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), route);
  // @@protoc_insertion_point(field_set_allocated:gazebo.msgs.RestPost.route)
}

// required string json = 3;
inline bool RestPost::has_json() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RestPost::set_has_json() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RestPost::clear_has_json() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RestPost::clear_json() {
  json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json();
}
inline const ::std::string& RestPost::json() const {
  // @@protoc_insertion_point(field_get:gazebo.msgs.RestPost.json)
  return json_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestPost::set_json(const ::std::string& value) {
  set_has_json();
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gazebo.msgs.RestPost.json)
}
inline void RestPost::set_json(const char* value) {
  set_has_json();
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gazebo.msgs.RestPost.json)
}
inline void RestPost::set_json(const char* value, size_t size) {
  set_has_json();
  json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gazebo.msgs.RestPost.json)
}
inline ::std::string* RestPost::mutable_json() {
  set_has_json();
  // @@protoc_insertion_point(field_mutable:gazebo.msgs.RestPost.json)
  return json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestPost::release_json() {
  // @@protoc_insertion_point(field_release:gazebo.msgs.RestPost.json)
  clear_has_json();
  return json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestPost::set_allocated_json(::std::string* json) {
  if (json != NULL) {
    set_has_json();
  } else {
    clear_has_json();
  }
  json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json);
  // @@protoc_insertion_point(field_set_allocated:gazebo.msgs.RestPost.json)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

typedef boost::shared_ptr<gazebo::msgs::RestPost> RestPostPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gazebo

typedef const boost::shared_ptr<gazebo::msgs::RestPost const> ConstRestPostPtr;
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rest_5fpost_2eproto__INCLUDED
