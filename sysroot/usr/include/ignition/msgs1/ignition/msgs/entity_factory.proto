/*
 * Copyright (C) 2017 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/

syntax = "proto2";
package ignition.msgs;
option java_package = "com.ignition.msgs";
option java_outer_classname = "EntityFactoryProtos";

/// \ingroup ignition.msgs
/// \interface EntityFactory
/// \brief Message to create new entities in gazebo, at a given pose.
/// A model can be created in one of the following ways:
///
/// 1. From an SDF string (sdf field)
/// 2. From an SDF file (sdf_filename)
/// 3. Cloning an existing model (clone_model_name)
///
/// If more than one way is specified, the first field will be parsed and the
/// following ignored.
///
/// The message can also be used to edit an existing entity. The new entity
/// description is pushed into the entity named `edit_name`.
/// See issue #1954 for the current limitations using this method to edit
/// entities.

import "ignition/msgs/pose.proto";
import "ignition/msgs/light.proto";
import "ignition/msgs/header.proto";

message EntityFactory
{
  /// \brief Optional header data
  optional Header header                    = 1;

  /// \brief SDF description in string format.
  optional string sdf                       = 2;

  /// \brief Full path to SDF file.
  optional string sdf_filename              = 3;

  /// \brief Pose where the entity will be spawned.
  optional Pose pose                        = 4;

  /// \brief Name of the entity which will be updated.
  optional string edit_name                 = 5;

  /// \brief Name of model to clone.
  optional string clone_model_name          = 6;

  /// \brief Whether the server is allowed to rename the model in case of
  /// overlap with existing models.
  optional bool allow_renaming              = 7;

  /// \brief For inserting lights.
  optional Light light                      = 8;
}
