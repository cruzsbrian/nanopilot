/*
 * Copyright (C) 2017 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
*/

syntax = "proto2";
package ignition.msgs;
option java_package = "com.ignition.msgs";
option java_outer_classname = "PhysicsProtos";

/// \ingroup ignition.msgs
/// \interface Physics
/// \brief A message containing a description of the global physics properties

import "ignition/msgs/vector3d.proto";
import "ignition/msgs/header.proto";

message Physics
{
  enum Type
  {
    ODE = 1;
    BULLET = 2;
    SIMBODY = 3;
    DART = 4;
  }
  /// \brief Optional header data
  optional Header header                     = 1;

  optional Type type                         = 2[default=ODE];

  optional string solver_type                = 3;
  optional double min_step_size              = 4;
  optional int32 precon_iters                = 5;
  optional int32 iters                       = 6;
  optional double sor                        = 7;
  optional double cfm                        = 8;
  optional double erp                        = 9;
  optional double contact_max_correcting_vel = 10;
  optional double contact_surface_layer      = 11;
  optional Vector3d gravity                  = 12;
  optional bool enable_physics               = 13;
  optional double real_time_factor           = 14;
  optional double real_time_update_rate      = 15;
  optional double max_step_size              = 16;
  // The name of this physics profile (not to be confused with type)
  optional string profile_name               = 17;

  /// \brief Magnetic field
  optional Vector3d magnetic_field           = 18;
}
