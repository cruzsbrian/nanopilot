// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ignition/msgs/joint_animation.proto

#ifndef PROTOBUF_ignition_2fmsgs_2fjoint_5fanimation_2eproto__INCLUDED
#define PROTOBUF_ignition_2fmsgs_2fjoint_5fanimation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ignition/msgs/time.pb.h"
#include "ignition/msgs/header.pb.h"
#ifndef _MSC_VER
#pragma GCC system_header
#else
#pragma warning(push)
#pragma warning(disable: 4244 4267 4100 4244 4512 4127 4068 4275 4251)
#endif
#include <memory>
#include <ignition/msgs/Export.hh>
// @@protoc_insertion_point(includes)

namespace ignition {
namespace msgs {

// Internal implementation detail -- do not call these.
void IGNITION_MSGS_VISIBLE protobuf_AddDesc_ignition_2fmsgs_2fjoint_5fanimation_2eproto();
void protobuf_AssignDesc_ignition_2fmsgs_2fjoint_5fanimation_2eproto();
void protobuf_ShutdownFile_ignition_2fmsgs_2fjoint_5fanimation_2eproto();

class JointAnimation;
class JointAnimation_Joint;

// ===================================================================

class IGNITION_MSGS_VISIBLE JointAnimation_Joint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ignition.msgs.JointAnimation.Joint) */ {
 public:
  JointAnimation_Joint();
  virtual ~JointAnimation_Joint();

  JointAnimation_Joint(const JointAnimation_Joint& from);

  inline JointAnimation_Joint& operator=(const JointAnimation_Joint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JointAnimation_Joint& default_instance();

  void Swap(JointAnimation_Joint* other);

  // implements Message ----------------------------------------------

  inline JointAnimation_Joint* New() const { return New(NULL); }

  JointAnimation_Joint* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JointAnimation_Joint& from);
  void MergeFrom(const JointAnimation_Joint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JointAnimation_Joint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string name = 1;
  int name_size() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name(int index) const;
  ::std::string* mutable_name(int index);
  void set_name(int index, const ::std::string& value);
  void set_name(int index, const char* value);
  void set_name(int index, const char* value, size_t size);
  ::std::string* add_name();
  void add_name(const ::std::string& value);
  void add_name(const char* value);
  void add_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_name();

  // repeated double angle = 2;
  int angle_size() const;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  double angle(int index) const;
  void set_angle(int index, double value);
  void add_angle(double value);
  const ::google::protobuf::RepeatedField< double >&
      angle() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_angle();

  // @@protoc_insertion_point(class_scope:ignition.msgs.JointAnimation.Joint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> name_;
  ::google::protobuf::RepeatedField< double > angle_;
  friend void IGNITION_MSGS_VISIBLE protobuf_AddDesc_ignition_2fmsgs_2fjoint_5fanimation_2eproto();
  friend void protobuf_AssignDesc_ignition_2fmsgs_2fjoint_5fanimation_2eproto();
  friend void protobuf_ShutdownFile_ignition_2fmsgs_2fjoint_5fanimation_2eproto();

  void InitAsDefaultInstance();
  static JointAnimation_Joint* default_instance_;
};
// -------------------------------------------------------------------

class IGNITION_MSGS_VISIBLE JointAnimation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ignition.msgs.JointAnimation) */ {
 public:
  JointAnimation();
  virtual ~JointAnimation();

  JointAnimation(const JointAnimation& from);

  inline JointAnimation& operator=(const JointAnimation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JointAnimation& default_instance();

  void Swap(JointAnimation* other);

  // implements Message ----------------------------------------------

  inline JointAnimation* New() const { return New(NULL); }

  JointAnimation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JointAnimation& from);
  void MergeFrom(const JointAnimation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JointAnimation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef JointAnimation_Joint Joint;

  // accessors -------------------------------------------------------

  // optional .ignition.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::ignition::msgs::Header& header() const;
  ::ignition::msgs::Header* mutable_header();
  ::ignition::msgs::Header* release_header();
  void set_allocated_header(::ignition::msgs::Header* header);

  // optional string model_name = 2;
  bool has_model_name() const;
  void clear_model_name();
  static const int kModelNameFieldNumber = 2;
  const ::std::string& model_name() const;
  void set_model_name(const ::std::string& value);
  void set_model_name(const char* value);
  void set_model_name(const char* value, size_t size);
  ::std::string* mutable_model_name();
  ::std::string* release_model_name();
  void set_allocated_model_name(::std::string* model_name);

  // repeated .ignition.msgs.JointAnimation.Joint joint = 3;
  int joint_size() const;
  void clear_joint();
  static const int kJointFieldNumber = 3;
  const ::ignition::msgs::JointAnimation_Joint& joint(int index) const;
  ::ignition::msgs::JointAnimation_Joint* mutable_joint(int index);
  ::ignition::msgs::JointAnimation_Joint* add_joint();
  ::google::protobuf::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >*
      mutable_joint();
  const ::google::protobuf::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >&
      joint() const;

  // repeated .ignition.msgs.Time time = 4;
  int time_size() const;
  void clear_time();
  static const int kTimeFieldNumber = 4;
  const ::ignition::msgs::Time& time(int index) const;
  ::ignition::msgs::Time* mutable_time(int index);
  ::ignition::msgs::Time* add_time();
  ::google::protobuf::RepeatedPtrField< ::ignition::msgs::Time >*
      mutable_time();
  const ::google::protobuf::RepeatedPtrField< ::ignition::msgs::Time >&
      time() const;

  // @@protoc_insertion_point(class_scope:ignition.msgs.JointAnimation)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_model_name();
  inline void clear_has_model_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::ignition::msgs::Header* header_;
  ::google::protobuf::internal::ArenaStringPtr model_name_;
  ::google::protobuf::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint > joint_;
  ::google::protobuf::RepeatedPtrField< ::ignition::msgs::Time > time_;
  friend void IGNITION_MSGS_VISIBLE protobuf_AddDesc_ignition_2fmsgs_2fjoint_5fanimation_2eproto();
  friend void protobuf_AssignDesc_ignition_2fmsgs_2fjoint_5fanimation_2eproto();
  friend void protobuf_ShutdownFile_ignition_2fmsgs_2fjoint_5fanimation_2eproto();

  void InitAsDefaultInstance();
  static JointAnimation* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// JointAnimation_Joint

// repeated string name = 1;
inline int JointAnimation_Joint::name_size() const {
  return name_.size();
}
inline void JointAnimation_Joint::clear_name() {
  name_.Clear();
}
inline const ::std::string& JointAnimation_Joint::name(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.Joint.name)
  return name_.Get(index);
}
inline ::std::string* JointAnimation_Joint::mutable_name(int index) {
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.Joint.name)
  return name_.Mutable(index);
}
inline void JointAnimation_Joint::set_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.Joint.name)
  name_.Mutable(index)->assign(value);
}
inline void JointAnimation_Joint::set_name(int index, const char* value) {
  name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::set_name(int index, const char* value, size_t size) {
  name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ignition.msgs.JointAnimation.Joint.name)
}
inline ::std::string* JointAnimation_Joint::add_name() {
  // @@protoc_insertion_point(field_add_mutable:ignition.msgs.JointAnimation.Joint.name)
  return name_.Add();
}
inline void JointAnimation_Joint::add_name(const ::std::string& value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::add_name(const char* value) {
  name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ignition.msgs.JointAnimation.Joint.name)
}
inline void JointAnimation_Joint::add_name(const char* value, size_t size) {
  name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ignition.msgs.JointAnimation.Joint.name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
JointAnimation_Joint::name() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.Joint.name)
  return name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
JointAnimation_Joint::mutable_name() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.Joint.name)
  return &name_;
}

// repeated double angle = 2;
inline int JointAnimation_Joint::angle_size() const {
  return angle_.size();
}
inline void JointAnimation_Joint::clear_angle() {
  angle_.Clear();
}
inline double JointAnimation_Joint::angle(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.Joint.angle)
  return angle_.Get(index);
}
inline void JointAnimation_Joint::set_angle(int index, double value) {
  angle_.Set(index, value);
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.Joint.angle)
}
inline void JointAnimation_Joint::add_angle(double value) {
  angle_.Add(value);
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.Joint.angle)
}
inline const ::google::protobuf::RepeatedField< double >&
JointAnimation_Joint::angle() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.Joint.angle)
  return angle_;
}
inline ::google::protobuf::RepeatedField< double >*
JointAnimation_Joint::mutable_angle() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.Joint.angle)
  return &angle_;
}

// -------------------------------------------------------------------

// JointAnimation

// optional .ignition.msgs.Header header = 1;
inline bool JointAnimation::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JointAnimation::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JointAnimation::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JointAnimation::clear_header() {
  if (header_ != NULL) header_->::ignition::msgs::Header::Clear();
  clear_has_header();
}
inline const ::ignition::msgs::Header& JointAnimation::header() const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
inline ::ignition::msgs::Header* JointAnimation::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::ignition::msgs::Header;
  }
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.header)
  return header_;
}
inline ::ignition::msgs::Header* JointAnimation::release_header() {
  // @@protoc_insertion_point(field_release:ignition.msgs.JointAnimation.header)
  clear_has_header();
  ::ignition::msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline void JointAnimation::set_allocated_header(::ignition::msgs::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:ignition.msgs.JointAnimation.header)
}

// optional string model_name = 2;
inline bool JointAnimation::has_model_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JointAnimation::set_has_model_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JointAnimation::clear_has_model_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JointAnimation::clear_model_name() {
  model_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_name();
}
inline const ::std::string& JointAnimation::model_name() const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.model_name)
  return model_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JointAnimation::set_model_name(const ::std::string& value) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ignition.msgs.JointAnimation.model_name)
}
inline void JointAnimation::set_model_name(const char* value) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ignition.msgs.JointAnimation.model_name)
}
inline void JointAnimation::set_model_name(const char* value, size_t size) {
  set_has_model_name();
  model_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ignition.msgs.JointAnimation.model_name)
}
inline ::std::string* JointAnimation::mutable_model_name() {
  set_has_model_name();
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.model_name)
  return model_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JointAnimation::release_model_name() {
  // @@protoc_insertion_point(field_release:ignition.msgs.JointAnimation.model_name)
  clear_has_model_name();
  return model_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JointAnimation::set_allocated_model_name(::std::string* model_name) {
  if (model_name != NULL) {
    set_has_model_name();
  } else {
    clear_has_model_name();
  }
  model_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_name);
  // @@protoc_insertion_point(field_set_allocated:ignition.msgs.JointAnimation.model_name)
}

// repeated .ignition.msgs.JointAnimation.Joint joint = 3;
inline int JointAnimation::joint_size() const {
  return joint_.size();
}
inline void JointAnimation::clear_joint() {
  joint_.Clear();
}
inline const ::ignition::msgs::JointAnimation_Joint& JointAnimation::joint(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.joint)
  return joint_.Get(index);
}
inline ::ignition::msgs::JointAnimation_Joint* JointAnimation::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.joint)
  return joint_.Mutable(index);
}
inline ::ignition::msgs::JointAnimation_Joint* JointAnimation::add_joint() {
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.joint)
  return joint_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >*
JointAnimation::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.joint)
  return &joint_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ignition::msgs::JointAnimation_Joint >&
JointAnimation::joint() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.joint)
  return joint_;
}

// repeated .ignition.msgs.Time time = 4;
inline int JointAnimation::time_size() const {
  return time_.size();
}
inline void JointAnimation::clear_time() {
  time_.Clear();
}
inline const ::ignition::msgs::Time& JointAnimation::time(int index) const {
  // @@protoc_insertion_point(field_get:ignition.msgs.JointAnimation.time)
  return time_.Get(index);
}
inline ::ignition::msgs::Time* JointAnimation::mutable_time(int index) {
  // @@protoc_insertion_point(field_mutable:ignition.msgs.JointAnimation.time)
  return time_.Mutable(index);
}
inline ::ignition::msgs::Time* JointAnimation::add_time() {
  // @@protoc_insertion_point(field_add:ignition.msgs.JointAnimation.time)
  return time_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ignition::msgs::Time >*
JointAnimation::mutable_time() {
  // @@protoc_insertion_point(field_mutable_list:ignition.msgs.JointAnimation.time)
  return &time_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ignition::msgs::Time >&
JointAnimation::time() const {
  // @@protoc_insertion_point(field_list:ignition.msgs.JointAnimation.time)
  return time_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


typedef std::unique_ptr<JointAnimation> JointAnimationUniquePtr;
typedef std::unique_ptr<const JointAnimation> ConstJointAnimationUniquePtr;
typedef std::shared_ptr<JointAnimation> JointAnimationSharedPtr;
typedef std::shared_ptr<const JointAnimation> ConstJointAnimationSharedPtr;
// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace ignition

#ifdef _MSC_VER
#pragma warning(pop)
#endif
// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ignition_2fmsgs_2fjoint_5fanimation_2eproto__INCLUDED
